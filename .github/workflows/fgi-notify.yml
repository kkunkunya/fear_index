name: FGI Monitoring System

# 触发条件：多时段定时任务和手动触发
on:
  schedule:
    # 监控模式：每小时第7分钟运行（被动触发检测 + 自动汇报）
    - cron: "7 * * * *"
    # 定时汇报：早中晚三个时段
    - cron: "0 0 * * *"    # 早报 UTC 00:00 (北京08:00)
    - cron: "0 4 * * *"    # 午报 UTC 04:00 (北京12:00)
    - cron: "0 12 * * *"   # 晚报 UTC 12:00 (北京20:00)
  workflow_dispatch:
    # 手动触发支持选择运行模式
    inputs:
      mode:
        description: '运行模式'
        required: true
        default: 'monitor'
        type: choice
        options:
        - monitor
        - scheduled

# 权限配置：需要读取代码和写入state.json文件
permissions:
  contents: write  # 允许提交state.json
  actions: read

# 并发控制：确保同时只有一个工作流实例运行
concurrency:
  group: fgi-notifier
  cancel-in-progress: false

jobs:
  # 监控任务 - 默认的FGI监控和被动汇报
  monitor:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && github.event.schedule == '7 * * * *' || (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'monitor')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run FGI Monitor
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          FGI_RUN_MODE: monitor
        run: |
          python -m src.fgi_notifier monitor

      - name: Commit state changes
        run: |
          if [[ -n "$(git status --porcelain state/state.json 2>/dev/null)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add state/state.json
            git commit -m "chore(state): update monitor state on $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push
          else
            echo "No state changes to commit."
          fi

  # 定时汇报任务 - 早中晚定时汇报
  scheduled-reports:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && (github.event.schedule == '0 0 * * *' || github.event.schedule == '0 4 * * *' || github.event.schedule == '0 12 * * *') || (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'scheduled')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Scheduled Reports
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          FGI_RUN_MODE: scheduled
        run: |
          python -m src.fgi_notifier scheduled